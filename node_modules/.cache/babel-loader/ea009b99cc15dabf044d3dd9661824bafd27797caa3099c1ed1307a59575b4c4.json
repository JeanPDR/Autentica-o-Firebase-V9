{"ast":null,"code":"var _jsxFileName = \"/workspace/Autentica-o-Firebase-V9/src/pages/Passenger/TaskManager.js\",\n  _s = $RefreshSig$();\nimport './taskManager.css';\nimport Task from './Task';\nimport { useState, useEffect } from 'react';\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport AddTask from './AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManager() {\n  _s();\n  const [openAddModal, setOpenAddModal] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  /* function to get all tasks from firestore in realtime */\n  useEffect(() => {\n    const taskColRef = query(collection(db, 'tasks'), orderBy('created', 'desc'));\n    onSnapshot(taskColRef, snapshot => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskManager\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskManager__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpenAddModal(true),\n        children: \"Chamar Locavan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskManager__tasks\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          completed: task.data.completed,\n          title: task.data.title,\n          description: task.data.description\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), openAddModal && /*#__PURE__*/_jsxDEV(AddTask, {\n      onClose: () => setOpenAddModal(false),\n      open: openAddModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"uy15IdFoQHD4sXYhNZ6/pwDX9wE=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["Task","useState","useEffect","collection","query","orderBy","onSnapshot","db","AddTask","TaskManager","openAddModal","setOpenAddModal","tasks","setTasks","taskColRef","snapshot","docs","map","doc","id","data","task","completed","title","description"],"sources":["/workspace/Autentica-o-Firebase-V9/src/pages/Passenger/TaskManager.js"],"sourcesContent":["import './taskManager.css'\nimport Task from './Task'\nimport {useState, useEffect} from 'react'\nimport {collection, query, orderBy, onSnapshot} from \"firebase/firestore\"\nimport {db} from '../../firebase'\nimport AddTask from './AddTask'\nfunction TaskManager() {\n\n  const [openAddModal, setOpenAddModal] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  /* function to get all tasks from firestore in realtime */ \n  useEffect(() => {\n    const taskColRef = query(collection(db, 'tasks'), orderBy('created', 'desc'))\n    onSnapshot(taskColRef, (snapshot) => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })))\n    })\n  },[])\n\n  return (\n    <div className='taskManager'>\n      <header>Task Manager</header>\n      <div className='taskManager__container'>\n        <button \n          onClick={() => setOpenAddModal(true)}>\n          Chamar Locavan\n        </button>\n        <div className='taskManager__tasks'>\n\n          {tasks.map((task) => (\n            <Task\n              id={task.id}\n              key={task.id}\n              completed={task.data.completed}\n              title={task.data.title} \n              description={task.data.description}\n            />\n          ))}\n\n        </div>\n      </div>\n\n      {openAddModal &&\n        <AddTask onClose={() => setOpenAddModal(false)} open={openAddModal}/>\n      }\n\n    </div>\n  )\n}\n\nexport default TaskManager\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAO,oBAAoB;AACzE,SAAQC,EAAE,QAAO,gBAAgB;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAA;AAC/B,SAASC,WAAW,GAAG;EAAA;EAErB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGV,KAAK,CAACD,UAAU,CAACI,EAAE,EAAE,OAAO,CAAC,EAAEF,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC7EC,UAAU,CAACQ,UAAU,EAAGC,QAAQ,IAAK;MACnCF,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QACjCC,EAAE,EAAED,GAAG,CAACC,EAAE;QACVC,IAAI,EAAEF,GAAG,CAACE,IAAI;MAChB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAA,UAAQ;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7B;MAAK,SAAS,EAAC,wBAAwB;MAAA,wBACrC;QACE,OAAO,EAAE,MAAMT,eAAe,CAAC,IAAI,CAAE;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAK,SAAS,EAAC,oBAAoB;QAAA,UAEhCC,KAAK,CAACK,GAAG,CAAEI,IAAI,iBACd,QAAC,IAAI;UACH,EAAE,EAAEA,IAAI,CAACF,EAAG;UAEZ,SAAS,EAAEE,IAAI,CAACD,IAAI,CAACE,SAAU;UAC/B,KAAK,EAAED,IAAI,CAACD,IAAI,CAACG,KAAM;UACvB,WAAW,EAAEF,IAAI,CAACD,IAAI,CAACI;QAAY,GAH9BH,IAAI,CAACF,EAAE;UAAA;UAAA;UAAA;QAAA,QAKf;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,EAELT,YAAY,iBACX,QAAC,OAAO;MAAC,OAAO,EAAE,MAAMC,eAAe,CAAC,KAAK,CAAE;MAAC,IAAI,EAAED;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAGnE;AAEV;AAAC,GA7CQD,WAAW;AAAA,KAAXA,WAAW;AA+CpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}